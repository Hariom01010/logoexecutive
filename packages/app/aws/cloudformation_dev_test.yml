AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Creates resources for the openlogo project in the development environment. 
  Without a retention policy, these resources will be deleted when the stack is removed. 
  Services include CloudFront for CDN, S3 for object storage, and a Service role for access. 
  Specifically designed for Dev/Test environment.

Parameters:
  EncodedRSAPublicKey:
    Type: String
    Default: |
      Insert the public key value in PEM format, encompassing both 
      -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY-----.
      Refer to https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html for guidance.
    Description: |
      The public key is employed to verify the signed URL generated with the private key.

  CDNPathInS3:
    Type: String
    Default: path/to/object
    Description: |
      Specify the S3 path where your objects are located, excluding the bucket name. 
      Ensure the path does not begin or end with a slash.
    AllowedPattern: ^[a-zA-Z0-9]+(/[a-zA-Z0-9]+)*$

Resources:
  S3bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub teamshiksha-openlogo-dev-test-${AWS::AccountId}-${AWS::Region}
      AccessControl: Private

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - S3bucket
      - CloudFrontOAI
    Properties:
      Bucket: !Ref S3bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource:
              !Join ["", [!GetAtt S3bucket.Arn, !Sub "/${CDNPathInS3}/*"]]
            Action:
              - s3:GetObject
            Principal:
              AWS:
                !Join [
                  "",
                  [
                    "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                    !Ref CloudFrontOAI,
                  ],
                ]

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Legacy origin access identity(OAI) for Cloudfront CDN

  CloudFrontPublicKey:
    Type: AWS::CloudFront::PublicKey
    DependsOn:
      - CloudFrontOAI
    Properties:
      PublicKeyConfig:
        Comment: Public key for verifying the signed URL
        CallerReference: !Sub ${AWS::AccountId}-${AWS::StackName}
        EncodedKey: !Sub ${EncodedRSAPublicKey}
        Name: OPENLOGO_PUBLICKEY

  CloudFrontKeyGroup:
    Type: AWS::CloudFront::KeyGroup
    DependsOn:
      - CloudFrontPublicKey
    Properties:
      KeyGroupConfig:
        Comment: Key group used during Signed URL
        Items:
          - !Ref CloudFrontPublicKey
        Name: OPENLOGO_KEYGROUP

  CloudFrontCDN:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - CloudFrontKeyGroup
      - S3BucketPolicy
      - S3bucket
    Properties:
      DistributionConfig:
        IPV6Enabled: true
        Comment: Global CloudFront CDN for openlogo
        Origins:
          - DomainName: !GetAtt S3bucket.DomainName
            Id: !Ref S3bucket
            OriginPath: !Join ["", [/, !Sub "${CDNPathInS3}"]]
            S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "",
                  ["origin-access-identity/cloudfront/", !Ref CloudFrontOAI],
                ]
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: 5000
          TargetOriginId: !Ref S3bucket
          ViewerProtocolPolicy: https-only
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          TrustedKeyGroups:
            - !Ref CloudFrontKeyGroup

  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: OpenlogoUser

  IAMManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn:
      - S3bucket
      - CloudFrontCDN
      - IAMUser
    Properties:
      ManagedPolicyName: logoexecutiveCDNS3Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Resource: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontCDN}
            Action:
              - "cloudformation:Describe*"
              - "cloudformation:List*"
              - "cloudformation:Get*"
          - Effect: Allow
            Resource: !Sub ${S3bucket.Arn}/${CDNPathInS3}/*
            Action:
              - "s3:Put*"
      Users:
        - !Ref IAMUser

  IAMReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: openlogoReadOnlyGroup

  IAMReadOnlyPolicy:
    Type: AWS::IAM::ManagedPolicy
    DependsOn:
      - S3bucket
      - CloudFrontCDN
      - IAMReadOnlyGroup
    Properties:
      ManagedPolicyName: openlogoReadOnlyPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "s3:ListAllMyBuckets"
            Resource: "arn:aws:s3:::*"
          - Effect: Allow
            Action: "s3:GetBucketLocation"
            Resource: !Sub "${S3bucket.Arn}"
          - Effect: Allow
            Action: "s3:ListBucket"
            Resource: !Sub "${S3bucket.Arn}"
          - Effect: Allow
            Action: "cloudfront:ListDistributions"
            Resource: "*"
          - Effect: Allow
            Action:
              - "cloudfront:GetDistribution"
              - "cloudfront:GetDistributionConfig"
            Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontCDN}"
          - Effect: Allow
            Action:
              - "cloudformation:DescribeStacks"
              - "cloudformation:ListStacks"
            Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*"
          - Effect: Allow
            Action:
              - "cloudformation:GetTemplate"
              - "cloudformation:DescribeStackResources"
              - "cloudformation:ListStackResources"
            Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"
          - Effect: Allow
            Action:
              - "iam:ListUsers"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:user/*"
          - Effect: Allow
            Action:
              - "iam:GetUser"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:user/OpenlogoUser"
          - Effect: Allow
            Action:
              - "iam:ListGroups"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:group/*"
          - Effect: Allow
            Action:
              - "iam:GetGroup"
              - "iam:ListGroupPolicies"
              - "iam:ListAttachedGroupPolicies"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:group/openlogoReadOnlyGroup"
          - Effect: Allow
            Action:
              - "iam:ListPolicies"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:policy/*"
          - Effect: Allow
            Action:
              - "iam:GetPolicy"
              - "iam:GetPolicyVersion"
              - "iam:ListAttachedUserPolicies"
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:policy/openlogoReadOnlyPolicy"
      Groups:
        - !Ref IAMReadOnlyGroup
Outputs:
  EnvFileItems:
    Value: !Sub BUCKET_NAME=${S3bucket},DISTRIBUTION_ID=${CloudFrontCDN},BUCKET_REGION=${AWS::Region},KEY=${CDNPathInS3},DISTRIBUTION_DOMAIN=https://${CloudFrontCDN.DomainName},CLOUD_FRONT_KEYPAIR_ID=${CloudFrontPublicKey}
    Description: Items to be used for the backend environmental variables
